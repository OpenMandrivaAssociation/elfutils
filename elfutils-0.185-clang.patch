diff -Naur elfutils-0.185/configure.ac elfutils-0.185.tpg/configure.ac
--- elfutils-0.185/configure.ac	2021-05-22 18:25:24.000000000 +0000
+++ elfutils-0.185.tpg/configure.ac	2021-07-09 14:58:28.830836510 +0000
@@ -127,7 +127,7 @@
 		  ac_cv_c99=yes, ac_cv_c99=no)
 CFLAGS="$old_CFLAGS"])
 AS_IF([test "x$ac_cv_c99" != xyes],
-      AC_MSG_ERROR([gcc with GNU99 support required]))
+      AC_MSG_WARN([gcc with GNU99 support required]))
 
 AC_CACHE_CHECK([whether gcc supports __attribute__((visibility()))],
 	ac_cv_visibility, [dnl
diff -Naur elfutils-0.185/src/readelf.c elfutils-0.185.tpg/src/readelf.c
--- elfutils-0.185/src/readelf.c	2021-05-22 18:25:24.000000000 +0000
+++ elfutils-0.185.tpg/src/readelf.c	2021-07-09 15:22:54.233261968 +0000
@@ -8763,13 +8763,17 @@
       /* Apply the "operation advance" from a special opcode
 	 or DW_LNS_advance_pc (as per DWARF4 6.2.5.1).  */
       unsigned int op_addr_advance;
-      inline void advance_pc (unsigned int op_advance)
-      {
-	op_addr_advance = minimum_instr_len * ((op_index + op_advance)
-					       / max_ops_per_instr);
-	address += op_addr_advance;
-	op_index = (op_index + op_advance) % max_ops_per_instr;
-      }
+      bool show_op_index;
+      #define advance_pc(op_advance_arg) \
+      ( { \
+        unsigned int op_advance = op_advance_arg; \
+				op_addr_advance = minimum_instr_len * ((op_index + (op_advance)) \
+											/ max_ops_per_instr); \
+				address += (op_advance); \
+				show_op_index = (op_index > 0 || \
+						(op_index + (op_advance)) % max_ops_per_instr > 0); \
+				op_index = (op_index + (op_advance)) % max_ops_per_instr; \
+      } )
 
       if (max_ops_per_instr == 0)
 	{
